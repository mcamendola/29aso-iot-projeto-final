service: backend-api-29aso-iot

plugins:
  - serverless-offline

custom:
  stage: ${env:SLS_STAGE, opt:stage, self:provider.stage}

provider:
  name: aws
  runtime: nodejs6.10
  role: defaultRole
  stage: dev
  tracing: true
  timeout: 30
  memorySize: 1024
  environment:
    STAGE: ${self:custom.stage}
    DEFAULT_TIMEZONE: "America/Sao_Paulo"

functions:
  #
  # Temperature
  #
  receiveTemperature:
    handler: handler/temperature/resources/receive-temperature-from-dht11.handler
    events:
      - http:
          path: /temperature
          method: post
  
  updateTemperatureMax:
    handler: handler/temperature/resources/update-temperature-max.handler
    events:
      - http:
          path: /temperature/max
          method: put

  getTemperaturesByDate:
    handler: handler/temperature/resources/get-by-date.handler
    events:
      - http:
          path: /temperatures/{date}
          method: get
          cors: true

resources:
  Resources:
    defaultRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${self:service}-${self:custom.stage}-${self:provider.region}-defaultRole
        AssumeRolePolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${self:service}-${self:custom.stage}-defaultServerlessPolicy
            PolicyDocument:
              Version: "2012-10-17"
              Statement:
                - Effect: Allow
                  Action:
                    - logs:CreateLogGroup
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      -
                        - 'arn:aws:logs'
                        - Ref: 'AWS::Region'
                        - Ref: 'AWS::AccountId'
                        - 'log-group:/aws/lambda/*:*:*'
                - Effect: Allow
                  Action:
                    - SNS:Publish
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - dynamodb:Query
                    - dynamodb:Scan
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DeleteItem
                    - dynamodb:BatchGetItem
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - dynamodb:GetRecords
                    - dynamodb:GetShardIterator
                    - dynamodb:DescribeStream
                    - dynamodb:ListStreams
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - lambda:InvokeFunction
                    - lambda:InvokeAsync
                  Resource: "*"
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource:
                    - "*"
